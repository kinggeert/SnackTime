@using Microsoft.AspNetCore.Mvc.TagHelpers
@Model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<style>
    .grid-wrapper {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 100%;
    }
</style>

<div class="grid-wrapper">
    <!-- Section for categories -->
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Categorie
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Categories)
            {
                <tr>
                    <td>
                        <a asp-action="Index" asp-route-id="@item.Identifier">@item.Name</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <!-- Section for Products -->
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Producten
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var product in Model.SelectedCategory.ProductsInCategory)
            {
                <tr>
                    <td>
                        <!-- Button to trigger modal -->
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#productModal-@product.Identifier">
                            @product.Name
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="productModal-@product.Identifier" tabindex="-1" role="dialog" aria-labelledby="productModalLabel-@product.Identifier" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="productModalLabel-@product.Identifier">@product.Name</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        @product.Name
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <!-- Section for basket -->
    <div>
        @if (User.Identity.IsAuthenticated)
        {
            <div>
                <label>Winkelmand</label>
            </div>
            <div class="btn-group" role="group" aria-label="Order Type Selector">
                <form method="post" asp-action="SubmitOrder">
                    <div>
                        <input type="hidden" id="SelectedOrderType" name="OrderType" value="@(Model.SelectedOrderType.ToString())" />

                        <button type="button" class="btn btn-outline-primary @((Model.SelectedOrderType == Order.OrderType.Takeout) ? "active" : "")"
                                onclick="setOrderType('Takeout')">
                            Takeout
                        </button>
                        <button type="button" class="btn btn-outline-primary @((Model.SelectedOrderType == Order.OrderType.InStore) ? "active" : "")"
                                onclick="setOrderType('InStore')">
                            In-Store
                        </button>
                    </div>
                    <div>
                        <label for="TableNumber">Tafelnummer</label>
                        <input type="number" id="TableNumber" name="TableNumber" class="form-control" value="@Model.TableNumber" />
                    </div>
                    <div>
                        <input type="hidden" if="Basket" name="Basket" value="@(Model.Basket)"/>
                        @if (Model.Basket.Products != null)
                        {
                            @foreach (var item in Model.Basket.Products)
                            {
                                <div>
                                    <div>
                                        @item.Product.Name
                                    </div>
                                    <div>
                                        @item.Count

                                        @item.GetTotalPrice()
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <button type="submit" class="btn btn-success">Bestellen</button>
                </form>
            </div>
        }
        else
        {
            <div>
                Log aub in of registreer een account om een bestelling te plaatsen.
            </div>
            <div>
                <button type="button" onclick="location.href='@Url.Action("Login", "Account")'">Inloggen</button>
                <button type="button" onclick="location.href='@Url.Action("Register", "Account")'">Registreren</button>
            </div>
        }
    </div>
</div>


<script>
    function setOrderType(orderType) {
        document.getElementById('selectedOrderType').value = orderType;

        // Optionally highlight the selected button
        const buttons = document.querySelectorAll('.btn-group .btn');
        buttons.forEach(button => button.classList.remove('active'));
        
        const activeButton = document.querySelector(`button[onclick="setOrderType('${orderType}')"]`);
        if (activeButton) {
            activeButton.classList.add('active');
        }
    }
</script>
